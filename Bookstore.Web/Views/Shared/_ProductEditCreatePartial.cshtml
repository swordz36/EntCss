@model BabyStore.Web.ViewModels.ProductViewModel

<div class="form-group">
    @Html.LabelFor(x=> x.Name, new {@class = "control-label col-md-2"})
    <div class="col-md-2=col-md-10">
        @Html.EditorFor(x=> x.Name, new {@class="form-control"})
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Description, new { @class = "control-label col - md - 2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Description, "", new{ @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.Price, new{ @class = "control-label col-md-2" })
    <div class="col-md-10">
        @Html.EditorFor(model => model.Price, new { @class = "form-control"})
        @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
    </div>
</div>

<div class="form-group">
    @Html.LabelFor(model => model.CategoryId, new { @class = "control-label col - md - 2" })
    <div class="col-md-10">
        @Html.DropDownListFor(vm => vm.CategoryId, Model.CategoryList, new {@class = "form-control"})
        @Html.ValidationMessageFor(model => model.CategoryId, "", new {@class = "text-danger" })
    </div>
</div>

@for (int i = 0; i < Model.ImageLists.Count; i++)
{
    <div class="form-group">
        <label class="control-label col-md-2">Product Image @(i + 1):</label>
        <div class="col-md-10">
            @Html.DropDownListFor(vm => vm.ProductImages, Model.ImageLists[i], "Choose Image", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.ImageLists, "", new { @class = "text-danger" })
        </div>
    </div>
}