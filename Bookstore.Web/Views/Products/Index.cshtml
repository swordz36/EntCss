@model BabyStore.Web.ViewModels.ProductIndexViewModel
@using X.PagedList.Mvc 
@using X.PagedList

@{
    ViewBag.Title = "Products";
}

<h2>@ViewBag.Title</h2>
<p>
    @(String.IsNullOrWhiteSpace(Model.Search) ? "Showing all" : "You search for " +
        Model.Search + " found") @ViewBag.OnePageOfProducts. products
    </p>
    <p>
        @Html.ActionLink("Create New", "Create")
        @using (Html.BeginForm("Index", "Products", FormMethod.Get))
        {
            <label>Filter by category:</label>
            @Html.DropDownListFor(x => x.Category, Model.CatFilterItems, "All")
            <input type="hidden" name="Search" id="Search" value="@ViewBag.Search" />
            <label>Sort by:</label>
            @Html.DropDownListFor(vm => vm.SortBy, new SelectList(Model.Sorts, "Value", "Key"), "Default")
            <input class="btn btn-xs btn-default" type="submit" value="Filter" />
        }
    </p>
    <table class="table table-bordered table-condensed table-hover table-responsive table-striped">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products.First().Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products.First().Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Products.First().Price)
            </th>
            <th></th>
        </tr>

        @foreach (var item in Model.Products)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Category.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Description)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Price)
                </td>
                <td>
                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                    @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = item.Id })
                </td>
            </tr>
        }

    </table>
    <div>
        Page @(Model.Products.PageCount < Model.Products.PageNumber ? 0
        : Model.Products.PageNumber) of @Model.Products.PageCount @Html.PagedListPager(Model.Products, page => Url.Action("Index",
        new
        {
            category = @Model.Category,
            Search = @Model.Search,
            sortBy = @Model.SortBy,
            page
        }))
    </div>
